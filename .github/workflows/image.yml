name: Docker Image CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  REGISTRY: ghcr.io

jobs:
  build:
    # runs-on: ubuntu-latest
    runs-on: self-hosted
    permissions:
      contents: write
      packages: write
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: '0'

    - name: Bump version and push tag
      # https://github.com/anothrNick/github-tag-action
      id: bump_version
      uses: anothrNick/github-tag-action@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        WITH_V: false
        DEFAULT_BUMP: minor
        GIT_API_TAGGING : true


    - name: Set releaase
      run: |
        echo "GITHUB_ORG="$(echo ${GITHUB_REPOSITORY} | sed 's/\/docker-.*//' ) >> $GITHUB_ENV
        echo "GITHUB_REPO="$(echo ${GITHUB_REPOSITORY} | sed 's/.*\/docker-//' ) >> $GITHUB_ENV
        echo "GITHUB_SHA=${GITHUB_SHA}" >> $GITHUB_ENV
        cat $GITHUB_ENV

    - name: Checkout repository
      # https://github.com/actions/checkout
      uses: actions/checkout@v4

    - name: Log in to the Container registry
      # https://github.com/docker/login-action
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Set up Docker Buildx
      # https://github.com/docker/setup-buildx-action
      id: buildx
      uses: docker/setup-buildx-action@v3

    - name: Build and push
      # https://github.com/docker/build-push-action
      id: docker_build
      uses: docker/build-push-action@v6
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: |
          ghcr.io/${{env.GITHUB_REPO}}:${{env.GITHUB_SHA}}
          ghcr.io/${{env.GITHUB_REPO}}:scan
          ghcr.io/${{env.GITHUB_REPO}}:${{ steps.bump_version.outputs.new_tag }}
          ghcr.io/${{env.GITHUB_REPO}}:latest
          ghcr.io/${{env.GITHUB_REPO}}:buildbyghactions

    # - name: Run Trivy vulnerability scanner
    #   uses: aquasecurity/trivy-action@master
    #   with:
    #     image-ref: 'ghcr.io/${{env.GITHUB_REPO}}:scan'
    #     format: 'template'
    #     template: '@/contrib/sarif.tpl'
    #     output: 'trivy-results.sarif'
    #     severity: 'UNKNOWN,LOW,MEDIUM,HIGH,CRITICAL'

    # - name: Upload Trivy scan results to GitHub Security tab
    #   uses: github/codeql-action/upload-sarif@v1
    #   with:
    #     sarif_file: 'trivy-results.sarif'
    # - name: Pull and deploy Docker image
    #   run: |
    #     docker compose -f compose.yml pull
    #     docker compose -f compose.yml up -d

    # - name: Extract tag
    #   run: echo "TAG=ghcr.io/${{env.GITHUB_REPO}}:${{ steps.bump_version.outputs.new_tag }}" >> $GITHUB_ENV

    - name: Set repository
      run: echo "REPOSITORY=ghcr.io/${{env.GITHUB_REPO}}" >> $GITHUB_ENV

    - name: Extract tag
      run: echo "TAG=${{ steps.bump_version.outputs.new_tag }}" >> $GITHUB_ENV

    - name: Debug TAG value
      run: echo "TAG=${{ env.TAG }}"

    - name: Set up Docker network
      run: docker network create web

    - name: Set up directories
      run: |
        mkdir -p certs vhost.d html conf.d acme

    - name: Deploy Docker Compose
      run: |
        docker compose -f compose.yml pull
        docker compose -f compose.yml up -d
      env:
        TAG: ${{ env.TAG }}

    - name: Verify Nginx Configuration
      run: docker exec -it nginx-proxy cat /etc/nginx/conf.d/default.conf

    # - name: Set image tag
    #   run: echo "TAG=$(echo ${{ steps.docker_build.outputs.tags }} | cut -d ',' -f 1)" >> $GITHUB_ENV

    # - name: Debug TAG value
    #   run: echo "TAG=${{ env.TAG }}"

    # - name: Deploy Docker Compose
    #   run: |
    #     TAG=${{ steps.docker_build.outputs.tags }}
    #     docker compose -f compose.yml pull
    #     docker compose -f compose.yml up -d
    #   env:
    #     TAG: ${{ env.TAG }}