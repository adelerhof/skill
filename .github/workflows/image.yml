name: Docker Image CI

# Triggers the workflow on push or pull request events
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]


env:
  REGISTRY: ghcr.io

jobs:
  build-kitty:
    runs-on: self-hosted # Use a self-hosted runner
    # runs-on: ubuntu-latest # Use this if you don't have a self-hosted runner
    permissions: # Set permissions for the workflow
      contents: write
      packages: write
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: '0'

    - name: Bump version and push tag
      # https://github.com/anothrNick/github-tag-action
      id: bump_version
      uses: anothrNick/github-tag-action@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        WITH_V: false
        DEFAULT_BUMP: minor
        GIT_API_TAGGING : true

    - name: Set release
      run: |
        # Extract organization name and repository name from GITHUB_REPOSITORY
        # GITHUB_REPOSITORY is in the format "owner/repo"
        echo "GITHUB_ORG="$(echo ${GITHUB_REPOSITORY} | sed 's/\/docker-.*//' ) >> $GITHUB_ENV
        echo "GITHUB_REPO="$(echo ${GITHUB_REPOSITORY} | sed 's/.*\/docker-//' ) >> $GITHUB_ENV
        echo "GITHUB_SHA=${GITHUB_SHA}" >> $GITHUB_ENV
        cat $GITHUB_ENV

    - name: Checkout repository
      # https://github.com/actions/checkout
      uses: actions/checkout@v4

    - name: Log in to the Container registry
      # https://github.com/docker/login-action
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Set up Docker Buildx
      # https://github.com/docker/setup-buildx-action
      id: buildx
      uses: docker/setup-buildx-action@v3

    - name: Build and push
      # https://github.com/docker/build-push-action
      id: docker_build
      uses: docker/build-push-action@v6
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: |
          ghcr.io/${{env.GITHUB_REPO}}:${{env.GITHUB_SHA}}
          ghcr.io/${{env.GITHUB_REPO}}:scan
          ghcr.io/${{env.GITHUB_REPO}}:${{ steps.bump_version.outputs.new_tag }}
          ghcr.io/${{env.GITHUB_REPO}}:latest
          ghcr.io/${{env.GITHUB_REPO}}:buildbyghactions

    - name: Set repository in environment variable
      run: echo "REPOSITORY=ghcr.io/${{env.GITHUB_REPO}}" >> $GITHUB_ENV

    - name: Set tag in environment variable
      run: echo "TAG=${{ steps.bump_version.outputs.new_tag }}" >> $GITHUB_ENV

  build-healthcheck-api:
    runs-on: self-hosted # Use a self-hosted runner
    # runs-on: ubuntu-latest # Use this if you don't have a self-hosted runner
    permissions: # Set permissions for the workflow
      contents: write
      packages: write
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: '0'

    - name: Bump version and push tag
      # https://github.com/anothrNick/github-tag-action
      id: bump_version
      uses: anothrNick/github-tag-action@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        WITH_V: false
        DEFAULT_BUMP: minor
        GIT_API_TAGGING : true

    - name: Set release
      run: |
        # Extract organization name and repository name from GITHUB_REPOSITORY
        # GITHUB_REPOSITORY is in the format "owner/repo"
        echo "GITHUB_ORG="$(echo ${GITHUB_REPOSITORY} | sed 's/\/docker-.*//' ) >> $GITHUB_ENV
        echo "GITHUB_REPO="$(echo ${GITHUB_REPOSITORY} | sed 's/.*\/docker-//' ) >> $GITHUB_ENV
        echo "GITHUB_SHA=${GITHUB_SHA}" >> $GITHUB_ENV
        cat $GITHUB_ENV

    - name: Checkout repository
      # https://github.com/actions/checkout
      uses: actions/checkout@v4

    - name: Log in to the Container registry
      # https://github.com/docker/login-action
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Set up Docker Buildx
      # https://github.com/docker/setup-buildx-action
      id: buildx
      uses: docker/setup-buildx-action@v3

    - name: Build and push
      # https://github.com/docker/build-push-action
      id: docker_build
      uses: docker/build-push-action@v6
      with:
        context: .
        file: ./health_check/Dockerfile
        push: true
        tags: |
          ghcr.io/${{env.GITHUB_REPO}}-healthcheck-api:${{env.GITHUB_SHA}}
          ghcr.io/${{env.GITHUB_REPO}}-healthcheck-api:scan
          ghcr.io/${{env.GITHUB_REPO}}-healthcheck-api:${{ steps.bump_version.outputs.new_tag }}
          ghcr.io/${{env.GITHUB_REPO}}-healthcheck-api:latest
          ghcr.io/${{env.GITHUB_REPO}}-healthcheck-api:buildbyghactions

    - name: Set tag in environment variable
      run: echo "TAG=${{ steps.bump_version.outputs.new_tag }}" >> $GITHUB_ENV

  deploy-kitty-and-healthcheck-api:
    runs-on: self-hosted # Use a self-hosted runner
    # runs-on: ubuntu-latest # Use this if you don't have a self-hosted runner
    permissions: # Set permissions for the workflow
      contents: write
      packages: write
    steps:

    - name: Set release
      run: |
        # Extract organization name and repository name from GITHUB_REPOSITORY
        # GITHUB_REPOSITORY is in the format "owner/repo"
        echo "GITHUB_ORG="$(echo ${GITHUB_REPOSITORY} | sed 's/\/docker-.*//' ) >> $GITHUB_ENV
        echo "GITHUB_REPO="$(echo ${GITHUB_REPOSITORY} | sed 's/.*\/docker-//' ) >> $GITHUB_ENV
        echo "GITHUB_SHA=${GITHUB_SHA}" >> $GITHUB_ENV
        cat $GITHUB_ENV

    - name: Set repository in environment variable
      run: echo "REPOSITORY=ghcr.io/${{env.GITHUB_REPO}}" >> $GITHUB_ENV

    - name: Deploy Docker Compose
      run: |
        # Pull the latest images
        docker compose -f docker-compose.yml pull
        # Build and start the containers in detached mode
        docker compose -f docker-compose.yml up --build -d --remove-orphans --force-recreate
      env:
        TAG: ${{ env.TAG }}
